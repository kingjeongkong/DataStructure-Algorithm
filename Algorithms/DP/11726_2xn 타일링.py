n = int(input())

if n == 1:
    print(1)
elif n == 2:
    print(2)
else:
    dp = [0] * (n+1)
    dp[1] = 1
    dp[2] = 2
    
    for i in range(3, n+1):
        dp[i] = dp[i-1] + dp[i-2]
      
    print(dp[n]%10007)


"""
다음 문제는 마지막에 2x1 타일이 하나씩 더 붙어가는 경우.

마지막에 2x1 타일이 하나 더 붙기전의 이전 타일들은 그 이전 타일들의 경우의 수와 같을 거라는 생각이 들어서 dp로 접근
직접 경우의 수를 찾아가면서 규칙을 찾으려 했지만 계산을 잘못해서 규칙을 찾지 못했음
점화식을 세울 때 바로 경우의 수를 세어가면서 점화식을 세우려하면 쉽게 찾을 수 없기도 하기에 원리를 먼저 찾으려고 접근해봐야 할거 같음

이 문제는 마지막에 2x1 타일이 세로로 붙거나(이전 도형은 2x(n-1)) 혹은 가로로 타일 2개가 붙거나(이전 도형은 2x(n-2)) 두 가지 경우가 있음
따라서 dp[i] = dp[i-1] + dp[i-2]로 점화식을 세울 수 있음
"""